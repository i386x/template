#!/bin/bash
# SPDX-License-Identifier: MIT

set -ex

SCRIPTDIR=$(dirname $0)
TOPDIR=${SCRIPTDIR}/..
CONFIG=${SCRIPTDIR}/config.sh

# Space separated list of molecule scenarios. Set by user in .travis/config.sh
# or as environment variable.
#LSR_MSCENARIOS=

# Include library.
. ${SCRIPTDIR}/utils.sh

# Assemble envlist that should be common for all roles.
if [[ "${TRAVIS}" ]]; then
  lsr_envlist_add 'pyXY' --if-travis-python-in '2.6 2.7 3.6 3.7 3.8' --if-has-unit-tests
  lsr_envlist_add 'flake8,pylint' --if-travis-python-in '2.7' --if-has-pyfiles
  lsr_envlist_add 'black' --if-travis-python-in '3.6' --if-has-pyfiles
  lsr_envlist_add 'molecule' --if-travis-python-is-system-python
else
  lsr_envlist_add 'black,pylint,flake8' --if-has-pyfiles
  lsr_envlist_add 'py26,py27,py36,py37,py38' --if-has-unit-tests
fi

# Do a custom changes.
if [[ -f ${CONFIG} ]]; then
  . ${CONFIG}
fi

# Make envlist visible to tox.
export TOXENV="${LSR_ENVLIST}"

# When running tox, the envlist deduction is like follows:
#
#   tox.ini's envlist < [travis] section < TOXENV < tox -e envlist
#
# tox.ini's envlist has lowest priority, tox -e envlist highest. Keep that in
# mind when running tox locally.

# If TOXENV is empty, skip running the tox.
if [[ "${TOXENV}" ]]; then
  (cd ${TRAVIS_BUILD_DIR:-${TOPDIR}} && tox "$@")
fi
# `tox -e ...` overrides TOXENV.
for X in ${LSR_MSCENARIOS}; do
  (cd ${TRAVIS_BUILD_DIR:-${TOPDIR}} && LSR_MSCENARIO=${X} tox -e molecule)
done
